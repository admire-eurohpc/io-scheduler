/******************************************************************************
 * Copyright 2021, Barcelona Supercomputing Center (BSC), Spain
 *
 * This software was partially supported by the EuroHPC-funded project ADMIRE
 *   (Project ID: 956748, https://www.admire-eurohpc.eu).
 *
 * This file is part of scord.
 *
 * scord is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * scord is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with scord.  If not, see <https://www.gnu.org/licenses/>.
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *****************************************************************************/

/* DO NOT MODIFY: This file is autogenerated by CMake */
#include <thread>
#include <filesystem>
#include <config/defaults.hpp>
#include <netinet/in.h>
#include <cstdint>

namespace scord::config::defaults {

const char* progname = "@CMAKE_PROJECT_NAME@";
const bool daemonize = true;
const bool use_syslog = false;
const bool use_console = false;
const std::filesystem::path log_file = {};
const uint32_t log_file_max_size = static_cast<uint32_t>(16 * 1024 * 1024);

const char* transport_protocol = "ofi+tcp";
const char* bind_address = "127.0.0.1";
const in_port_t remote_port = 42000;
const char* pidfile =
        "@CMAKE_INSTALL_FULL_LOCALSTATEDIR@/@CMAKE_PROJECT_NAME@.pid";

const uint32_t workers_in_pool = std::thread::hardware_concurrency();
const uint32_t backlog_size = 128;
const char* config_file =
        "@CMAKE_INSTALL_FULL_SYSCONFDIR@/@CMAKE_PROJECT_NAME@.conf";

} // namespace scord::config::defaults
